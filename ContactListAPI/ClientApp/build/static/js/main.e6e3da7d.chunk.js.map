{"version":3,"sources":["Components/Main/Contact list/Contact item/Status/Status.js","Services/APIService.js","Actions/ListActions.js","Components/Main/Contact list/Contact item/ContactItem.js","Components/Main/Contact list/ContactList.js","Components/SideBar/SideBar.js","Components/Main/Main.js","Components/NotFoundPage/NotFoundPage.js","Components/AddContact/AddContact.js","Actions/AddContactActions.js","Components/EditContact/EditContact.js","Reducers/ListReducer.js","Reducers/AddContactReducer.js","Reducers/RootReducer.js","store.js","index.js"],"names":["GetStatus","Status","onChangeStatus","className","onClick","APIService","URL","ContactURLS","GetList","AddContact","UpdateList","UpdateContact","DeleteContact","updateContact","contact","fetch","headers","method","body","JSON","stringify","then","res","console","log","catch","addToDatabase","deleteContact","Id","a","this","responce","json","data","List","err","ChangeFetch","isFetch","type","mapDispatchToProps","tempList","onClickDelete","onClickEdit","CurrentContact","DeleteSearch","connect","ListReducer","ContactList","SearchList","Name","Email","Phone","Gender","Image","img","id","name","htmlFor","viewBox","xmlns","src","alt","index","findIndex","e","slice","changeStatus","to","Delete","updateDB","partTempListOne","partTempListTwo","getAllList","list","payload","IsRequest","isSearch","item","useEffect","fetchContactList","forEach","element","push","phone","email","status","gender","image","map","listItem","length","countWork","countPrivate","countFriend","countFamily","onChangeSearch","search","InputSearch","SearchValue","CL","autoComplete","placeholder","defaultValue","onChange","toLowerCase","includes","SearchElements","target","value","NotFoundPage","onGetName","onGetEmail","onGetGender","onGetImage","onGetPhone","onGetStatus","onSubmit","ToDefault","onAddNewContact","newContactList","AddContactReducer","isRedirect","newContact","addNewContact","min","max","state","props","setState","preventDefault","onEditContact","EditSearch","i","Component","EditedList","initialState","action","combineReducers","store","createStore","RootReducer","App","path","exact","render","EditContact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e6e3da7d.chunk.js","sourcesContent":["\r\nconst GetStatus = ({ Status, onChangeStatus }) => {\r\n    switch (Status) {\r\n        case \"Friend\":\r\n            return (\r\n                <div className=\"lab lab-warning rounded-pill\" onClick={onChangeStatus}>\r\n                    {Status}\r\n                </div>);\r\n        case \"Work\":\r\n            return (\r\n                <div className=\"lab lab-success rounded-pill\" onClick={onChangeStatus}>\r\n                    {Status}\r\n                </div>);\r\n        case \"Private\":\r\n            return (\r\n                <div className=\"lab lab-danger rounded-pill\" onClick={onChangeStatus}>\r\n                    {Status}\r\n                </div>);\r\n        case \"Family\":\r\n            return (\r\n                <div className=\"lab lab-primary rounded-pill\" onClick={onChangeStatus}>\r\n                    {Status}\r\n                </div>);\r\n        default:\r\n            return (\r\n                < div className=\"lab\" >\r\n                    {Status}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default GetStatus","\r\nexport default class APIService {\r\n\r\n    URL = \"https://localhost:5001/\";\r\n\r\n    ContactURLS = {\r\n        GetList: \"get-all-contacts\",\r\n        AddContact: \"add-new-contact\",\r\n        UpdateList: \"update-contacts\",\r\n        UpdateContact: \"update-contact\",\r\n        DeleteContact: \"delete-contact\"\r\n    }\r\n\r\n    async fetchContactList() {\r\n        const List = await fetch(this.URL += this.ContactURLS.GetList)\r\n            .then(responce => {\r\n                return responce.json();\r\n            }).then(data => {\r\n                if (data == null) {\r\n                    return {\r\n                        List: []\r\n                    }\r\n\r\n                } else {\r\n                    return {\r\n                        List: data\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        return List;\r\n    }\r\n\r\n    // updateDatabse = (List) => {\r\n    //     fetch(this.URL + this.ContactURLS.UpdateList,\r\n    //         {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             },\r\n    //             method: \"PUT\",\r\n    //             body: JSON.stringify(List)\r\n    //         })\r\n    //         .then(res => console.log(res))\r\n    //         .catch(res => console.log(res))\r\n    //     return this;\r\n    // }\r\n\r\n    updateContact = (contact) => {\r\n        fetch(this.URL + this.ContactURLS.UpdateContact,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"PUT\",\r\n                body: JSON.stringify(contact)\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    addToDatabase = (contact) => {\r\n        fetch(this.URL + this.ContactURLS.AddContact,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(contact)\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(res => { console.log(res); })\r\n    }\r\n\r\n    deleteContact = (Id) => {\r\n        fetch(this.URL + this.ContactURLS.DeleteContact,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"DELETE\",\r\n                body: JSON.stringify(Id)\r\n            })\r\n            .then(res => console.log(res))\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n}\r\n","export const getAllList = (list) => {\r\n    return {\r\n        type: \"LISTLOADER\",\r\n        payload: list\r\n    }\r\n}\r\n\r\nexport const onChangeStatus = (tempList) => {\r\n    return {\r\n        type: \"CHANGESTATUS\",\r\n        tempList\r\n    }\r\n}\r\n\r\nexport const onClickDelete = (tempList) => {\r\n    return {\r\n        type: \"DELETE\",\r\n        tempList\r\n    }\r\n}\r\n\r\nexport const DeleteSearch = (tempList) => {\r\n    return {\r\n        type: \"DELETESEARCH\",\r\n        tempList\r\n    }\r\n}\r\n\r\nexport const onAddNewContact = (newContactList) => {\r\n    return {\r\n        type: \"ADDNEWCONTACT\",\r\n        newContactList\r\n    }\r\n}\r\n\r\nexport const onChangeSearch = ({ tempList: SearchList, search: isSearch, SearchValue: InputSearch}) => {\r\n    return {\r\n        type: \"SEARCH\",\r\n        SearchList,\r\n        isSearch,\r\n        InputSearch\r\n    }\r\n}\r\n\r\nexport const onClickEdit = (CurrentContact) => {\r\n    return{\r\n        type: \"EDIT\",\r\n        CurrentContact\r\n    }\r\n}\r\n\r\nexport const EditSearch = (EditedList) =>{\r\n    return{\r\n        type: \"EDITSEARCH\",\r\n        EditedList\r\n    }\r\n} \r\n\r\nexport const onEditContact = (EditedList) => {\r\n    return{\r\n        type: \"EDITED\",\r\n        EditedList\r\n    }\r\n}\r\n\r\nexport const ChangeFetch = (isFetch) => {\r\n    return{\r\n        type: \"CHANGEFETCH\",\r\n        isFetch\r\n    }\r\n}\r\n\r\n","import { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Import components\r\nimport GetStatus from \"./Status/Status\"\r\n\r\n// Import services\r\nimport APIService from \"../../../../Services/APIService\"\r\n\r\n// Import actions\r\nimport { onChangeStatus, onClickDelete, onClickEdit, DeleteSearch } from \"../../../../Actions/ListActions\"\r\n\r\n\r\nconst ContactItem = ({ ContactList, SearchList, Id, Name, Email, Phone, Status, Gender, Image,\r\n    onChangeStatus, onClickDelete, onClickEdit, DeleteSearch }) => {\r\n\r\n    const img = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`\r\n    return (\r\n        <div className=\"unit\" >\r\n            <div className=\"field name\">\r\n                <div className=\"check\">\r\n                    <input id=\"cb2\" name=\"cb1\" type=\"checkbox\" />\r\n                    <label htmlFor=\"cb2\"></label>\r\n                    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <img src={img} alt=\"...\" className=\"avatar\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        {Name}\r\n                        <GetStatus Status={Status} onChangeStatus={() => { onChangeStatus(changeStatus(ContactList, Id)) }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field phone\">\r\n                {Phone}\r\n            </div>\r\n            <div className=\"field email\">\r\n                <div className=\"row\">\r\n                    {Email}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"icons\">\r\n                        <Link to=\"/edit-contact\">\r\n                            <i className=\"far fa-edit fa-2x\" onClick={() => onClickEdit(ContactList[ContactList.findIndex(e => e.Id === Id)])}></i>\r\n                        </Link>\r\n                        <i className=\"far fa-trash-alt fa-2x\" onClick={() => { onClickDelete(Delete(Id, ContactList, true)); DeleteSearch(Delete(Id, SearchList)) }}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ ListReducer }) => {\r\n    const { ContactList, SearchList } = ListReducer;\r\n    return { ContactList, SearchList };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeStatus, onClickDelete, onClickEdit, DeleteSearch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n\r\nfunction Delete(Id, ContactList, updateDB) {\r\n    let index = ContactList.findIndex(e => e.Id === Id);\r\n    let partTempListOne = ContactList.slice(0, index);\r\n    let partTempListTwo = ContactList.slice(index + 1);\r\n    let tempList = [...partTempListOne, ...partTempListTwo]\r\n\r\n    new APIService().deleteContact(Id);\r\n\r\n    // if (updateDB)\r\n        // new APIService().updateDatabse(tempList);\r\n\r\n    return tempList;\r\n}\r\n\r\nfunction changeStatus(ContactList, Id) {\r\n    const index = ContactList.findIndex(e => e.Id === Id);\r\n    let contact = ContactList[index];\r\n    switch (contact.Status) {\r\n        case \"Friend\": contact.Status = \"Work\"; break;\r\n        case \"Work\": contact.Status = \"Family\"; break;\r\n        case \"Family\": contact.Status = \"Private\"; break;\r\n        case \"Private\": contact.Status = \"Friend\"; break;\r\n        default: break;\r\n    }\r\n\r\n    let tempList = ContactList.slice();\r\n    tempList[index] = contact;\r\n    new APIService().updateContact(contact);\r\n    // new APIService().updateDatabse(tempList);\r\n    return tempList;\r\n}","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import components\r\nimport ContactItem from \"./Contact item/ContactItem\";\r\n\r\n// Import actions\r\nimport { ChangeFetch, getAllList } from \"../../../Actions/ListActions\";\r\n\r\n// Import Services\r\nimport APIService from \"../../../Services/APIService\";\r\n\r\nconst ContactList = ({ ContactList, IsRequest, SearchList, isSearch, isFetch,\r\n    getAllList, ChangeFetch }) => {\r\n\r\n    useEffect(() => {\r\n        if (!isFetch) {\r\n            let api = new APIService();\r\n            api.fetchContactList().then(data => {\r\n                var list = data.List;\r\n                var tempList = [];\r\n\r\n                list.forEach(element => {\r\n                    tempList.push({\r\n                        Name: element.name,\r\n                        Id: element.id,\r\n                        Phone: element.phone,\r\n                        Email: element.email,\r\n                        Status: element.status,\r\n                        Gender: element.gender,\r\n                        Image: element.image\r\n                    })\r\n                });\r\n\r\n                getAllList(tempList);\r\n            });\r\n            ChangeFetch(true);\r\n        }\r\n    }, []); // [ContactList]); - trouble with Change/Get status\r\n\r\n    let item;\r\n    if (isSearch)\r\n        item = SearchList.map(listItem => {\r\n            return (\r\n                <ContactItem key={listItem.Id}\r\n                    {...listItem}\r\n                />\r\n            )\r\n        });\r\n    else\r\n        item = ContactList.map(listItem => {\r\n            return (\r\n                <ContactItem key={listItem.Id}\r\n                    {...listItem}\r\n                />\r\n            )\r\n        });\r\n\r\n    if (IsRequest && ContactList.length === 0)\r\n        return (\r\n            <section>\r\n                <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </section>\r\n        )\r\n    return (\r\n        <section>\r\n            {item.length > 0 ? item : <p className=\"emptyList\">Contact list is empty.</p>}\r\n        </section>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ ListReducer }) => {\r\n    const { ContactList, IsRequest, SearchList, isSearch, isFetch } = ListReducer;\r\n    return { ContactList, IsRequest, SearchList, isSearch,isFetch };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getAllList, ChangeFetch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { connect } from \"react-redux\";\r\n\r\nconst SideBar = ({ ContactList, IsRequest, SearchList,isSearch }) => {\r\n\r\n  let countWork = 0;\r\n  let countPrivate = 0;\r\n  let countFriend = 0;\r\n  let countFamily = 0;\r\n  if (!IsRequest) {\r\n    if (SearchList.length !== 0)\r\n      SearchList.forEach(element => {\r\n        switch (element.Status) {\r\n          case \"Friend\": ++countFriend; break;\r\n          case \"Work\": ++countWork; break;\r\n          case \"Private\": ++countPrivate; break;\r\n          case \"Family\": ++countFamily; break;\r\n          default: break;\r\n        }\r\n      });\r\n    else if (!isSearch)\r\n      ContactList.forEach(element => {\r\n        switch (element.Status) {\r\n          case \"Friend\": ++countFriend; break;\r\n          case \"Work\": ++countWork; break;\r\n          case \"Private\": ++countPrivate; break;\r\n          case \"Family\": ++countFamily; break;\r\n          default: break;\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n      <div className=\"contacts-labels\">\r\n        <div className=\"title\">All contacts<span>{ContactList.length}</span></div>\r\n        <div className=\"list\">\r\n          {/* <div className=\"input-group\">\r\n            <input type=\"text\" className=\"contacts-search rounded\" placeholder=\"Search\" />\r\n          </div> */}\r\n          <div className=\"head rounded\">Labels</div>\r\n          <div className=\"unit\">\r\n            <div className=\"lab lab-success rounded-pill\">Work</div><span>{countWork}</span>\r\n          </div>\r\n          <div className=\"unit\">\r\n            <div className=\"lab lab-primary rounded-pill\">Family</div><span>{countFamily}</span>\r\n          </div>\r\n          <div className=\"unit\">\r\n            <div className=\"lab lab-danger rounded-pill\">Private</div><span>{countPrivate}</span>\r\n          </div>\r\n          <div className=\"unit\">\r\n            <div className=\"lab lab-warning rounded-pill\">Friends</div><span>{countFriend}</span>\r\n          </div>\r\n          {/* <button type=\"button\" className=\"btn btn-primary font-weight-700\">Add new label</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ ListReducer }) => {\r\n  const { ContactList, IsRequest, SearchList, isSearch } = ListReducer;\r\n  return { ContactList, IsRequest, SearchList, isSearch };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SideBar);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// For redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// Import components\r\nimport ContactList from \"./Contact list/ContactList\";\r\nimport SideBar from \"../SideBar/SideBar\"\r\n\r\n// Import actions\r\nimport { onChangeSearch } from \"../../Actions/ListActions\";\r\n\r\nconst Main = ({ ContactList: CL,InputSearch, onChangeSearch }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container bootstrap snippets bootdeys bootdey\">\r\n                <div className=\"row decor-default\">\r\n\r\n                    <SideBar />\r\n                    <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n                        <div className=\"contacts-list\">\r\n                            <Link className=\"title\" to=\"/add-new-contact\">\r\n                                <div className=\"btn btn-success\">\r\n                                    Add new contact\r\n                                </div>\r\n                            </Link>\r\n\r\n                            <form className=\"ac-custom ac-checkbox ac-checkmark\" autoComplete=\"off\">\r\n                                <div className=\"input-group ml-2 \">\r\n                                    <input type=\"text\" className=\"rounded contacts-list-search\" placeholder=\"Search\" defaultValue={InputSearch} onChange={(e) => onChangeSearch(SearchElements(e.target.value.toLowerCase(), CL))} />\r\n                                </div>\r\n                                <div className=\"unit head\">\r\n                                    <div className=\"field name\">\r\n                                        <div className=\"check\">\r\n                                            <input id=\"cb1\" name=\"cb1\" type=\"checkbox\" />\r\n                                            <label htmlFor=\"cb1\"></label>\r\n                                            <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg></div>\r\n                                        Names\r\n                                    </div>\r\n                                    <div className=\"field phone\">\r\n                                        Phone\r\n                                    </div>\r\n                                    <div className=\"field email icons\">\r\n                                        Email\r\n                                        {/* <div className=\"btn-group pull-right\" role=\"group\">\r\n                                            <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-folder\"></span></button>\r\n\r\n                                            <div className=\"btn-group\" role=\"group\">\r\n                                                <button type=\"button\" className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span className=\"icon icon-label\"></span></button>\r\n\r\n                                                <ul className=\"dropdown-menu pull-right\">\r\n                                                    <li><a href=\"#\"><span className=\"label label-success text-dark\">New</span></a></li>\r\n                                                    <li><a href=\"#\"><span className=\"label label-primary text-dark\">Social</span></a></li>\r\n                                                    <li><a href=\"#\"><span className=\"label label-warning text-dark\">Spam</span></a></li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <button type=\"button\" className=\"btn btn-default\"><span className=\"icon icon-trash\"></span></button>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                                <ContactList />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ ListReducer }) => {\r\n    const { ContactList, InputSearch } = ListReducer\r\n    return { ContactList,InputSearch };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeSearch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\nfunction SearchElements(SearchValue, ContactList) {\r\n    const tempList = [];\r\n    let search = true;\r\n    if (SearchValue !== \"\")\r\n        ContactList.forEach(element => {\r\n            if (element.Name.toLowerCase().includes(SearchValue))\r\n                tempList.push(element);\r\n        });\r\n        else search = false;\r\n    return { tempList, search, SearchValue };\r\n}","import { Link } from \"react-router-dom\";\r\nimport {Fragment} from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"body-style pb-4\">\r\n                <div className=\"w-50\">\r\n                    <img alt=\"...\" src=\"https://lh3.googleusercontent.com/KnAhFB7f8i88GvV9jZbGPMDEKSm8a_Ewz1YGsa7FVhM5ocHarcVq7nAZgpufUmzWmViqU76CbWvP13sh-oLWcjCCfCbvUAO7LOYfoYmtgvC9zST-myYY9AfqePPTMNR_8LVL67T1eT_S923Oi5YrkrtMGkPipUXxqDtdc0Jf9TaC7AI0sQjwaqCKh0YMaQ1Yo9_VgEiwSHB60N1qxfAYXj9g3RrMedThuDOLEh9lJgmvI_VzxRSh7ZEh6hoIeRsHSI55CUE8Buyv1G399y2e_B97LSgJh7d-GU4RJqlrfuRuAWL2x0p_PG52Z83niCdOV41o-z8Kai6z5Il1z8cXnGUvlaFj0P_cfxdvyRIGSpYjTI6LSU2UtCxD-kNgBah7CJVSCpR6AgMHHyQQ5gQYtodvn4C_9GrYKzs1rJn66wNeUfCLJ33aqXWZdW_gILJMXK60rJ_65aCIWHvsAieTqqitZURwH0mXEYqoowrddbKj62pKuB_vOgfkcQWgVuU2jqwEWcg41KZbmfdmAasYTvvRbzSpsG44myVsg-DrVLp7Wrgl2Uii47B-v3aPFYy1_y_2bVthygSryH8xGnPXgsaLFaNWywmZN1hNCavugel_-eyrQn7Elrau1U9ZoZECxL8w7ikuD6fzZf_EWfkFn29ZyLOuRfT8L0bqVrSeInzy6TkNOLV0je8pPyVcgeVJoL0_rQsFZE-Nt_CYutuW1Q4F=w301-h248-no\" />\r\n                </div>\r\n                <div className=\"pr-2\">\r\n                    <h1>Page Not Found</h1>\r\n                    <div>We can't find the page you're looking for.You can either return to the previous page, visit our homepage or contact our support team.</div>\r\n                    <div>\r\n                        <br />\r\n                        <Link className=\"button-style w-100\" to=\"/\">Visit Homepage</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","import { Fragment } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\n// Import services\r\nimport APIService from \"../../Services/APIService\";\r\n\r\n// Import actions\r\nimport { onGetName, onGetEmail, onGetGender, onGetImage, onGetPhone, onGetStatus, onSubmit, ToDefault } from \"../../Actions/AddContactActions\";\r\nimport { onAddNewContact, ChangeFetch } from \"../../Actions/ListActions\";\r\n\r\nconst AddContact = ({ Name, Phone, Email, Status, Gender, Image, isRedirect, ContactList,\r\n    onGetName, onGetEmail, onGetGender, onGetImage, onGetPhone, onGetStatus, onSubmit, ToDefault, ChangeFetch }) => {\r\n\r\n    if (isRedirect) {\r\n        addNewContact({ Name, Email, Phone, Status, Image, Gender });\r\n        ChangeFetch(false);\r\n        ToDefault();\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    let img = \"\";\r\n    if (Image === \"\")\r\n        img = \"https://upload.wikimedia.org/wikipedia/commons/5/50/User_icon-cp.svg\"\r\n    else\r\n        img = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`;\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </nav>\r\n                <div className=\"row mt-4\">\r\n                    <form className=\"col-8\" onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Name\">Name</label>\r\n                            <input type=\"text\" name=\"Name\" className=\"form-control\" value={Name} placeholder=\"Enter name\" onChange={onGetName} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Phone\">Phone</label>\r\n                            <input type=\"tel\" name=\"Phone\" className=\"form-control\" value={Phone} placeholder=\"Enter phone\" onChange={onGetPhone} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Email\">Email address</label>\r\n                            <input type=\"email\" name=\"Email\" className=\"form-control\" value={Email} placeholder=\"Enter email\" onChange={onGetEmail} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Status\">Status</label>\r\n                            <select className=\"form-select w-100 p-2\" onChange={onGetStatus}>\r\n                                <option aria-selected value=\"Friend\">Friend</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Family\">Family</option>\r\n                                <option value=\"Private\">Private</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Gender\">Gender</label>\r\n                            <select className=\"form-select w-100 p-2\" value={Gender} onChange={onGetGender}>\r\n                                <option aria-selected value=\"men\">Man</option>\r\n                                <option value=\"women\">Woman</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Image\">Image</label>\r\n                            <input type=\"number\" name=\"Image\" className=\"form-control\" value={Image} min=\"0\" max=\"99\" placeholder=\"Enter number\" onChange={onGetImage} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary mt-3\">Add</button>\r\n                    </form>\r\n                    <div className=\"col-4\">\r\n                        <img src={img} className=\"rounded float-left avatar\" alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ AddContactReducer, ListReducer }) => {\r\n    const { Name, Phone, Email, Status, Gender, Image, isRedirect } = AddContactReducer;\r\n    const { ContactList } = ListReducer;\r\n    return { Name, Phone, Email, Status, Gender, Image, isRedirect, ContactList };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onGetName, onGetEmail, onGetGender, onGetImage, onGetPhone, onGetStatus, onSubmit, ToDefault, onAddNewContact, ChangeFetch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n\r\nfunction addNewContact(newContact) {\r\n    const { Name, Email, Phone, Status, Image, Gender } = newContact;\r\n    let contact =\r\n    {\r\n        Name,\r\n        Phone,\r\n        Email,\r\n        Status,\r\n        Gender,\r\n        Image\r\n    }\r\n    new APIService().addToDatabase(contact);\r\n}","export const onGetName = (e) => {\r\n    return {\r\n        type: \"GETNAME\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const onGetPhone = (e) => {\r\n    return {\r\n        type: \"GETPHONE\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const onGetEmail = (e) => {\r\n    return {\r\n        type: \"GETEMAIL\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const onGetStatus = (e) => {\r\n    return {\r\n        type: \"GETSTATUS\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const onGetGender = (e) => {\r\n    return {\r\n        type: \"GETGENDER\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const onGetImage = (e) => {\r\n    return {\r\n        type: \"GETIMAGE\",\r\n        value: e.target.value\r\n    }\r\n}\r\n\r\nexport const ToDefault = () =>{\r\n    return {\r\n        type: \"TODEFAULT\",\r\n    }\r\n}\r\n\r\nexport const onSubmit = (e) => {\r\n    return {\r\n        type: \"SUBMIT\",\r\n    }\r\n}","import { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\n// Import services\r\nimport APIService from \"../../Services/APIService\";\r\n\r\n// Import actions\r\nimport { onEditContact, EditSearch } from \"../../Actions/ListActions\";\r\n\r\nclass AddContact extends Component {\r\n\r\n    state =\r\n        {\r\n            Name: this.props.CurrentContact.Name,\r\n            Phone: this.props.CurrentContact.Phone,\r\n            Email: this.props.CurrentContact.Email,\r\n            Status: this.props.CurrentContact.Status,\r\n            Gender: this.props.CurrentContact.Gender,\r\n            Image: this.props.CurrentContact.Image,\r\n            isRedirect: false,\r\n        }\r\n\r\n    onGetName = (e) => {\r\n        const name = e.target.value;\r\n        this.setState({\r\n            Name: name\r\n        })\r\n    }\r\n\r\n    onGetPhone = (e) => {\r\n        const phone = e.target.value;\r\n        this.setState({\r\n            Phone: phone\r\n        })\r\n    }\r\n\r\n    onGetEmail = (e) => {\r\n        const email = e.target.value;\r\n        this.setState({\r\n            Email: email\r\n        })\r\n    }\r\n\r\n    onGetStatus = (e) => {\r\n        const status = e.target.value;\r\n        this.setState({\r\n            Status: status\r\n        })\r\n    }\r\n\r\n    onGetGender = (e) => {\r\n        const gender = e.target.value;\r\n        this.setState({\r\n            Gender: gender\r\n        })\r\n    }\r\n\r\n    onGetImage = (e) => {\r\n        const image = e.target.value;\r\n        if (image >= 0 && image < 100) {\r\n            this.setState({\r\n                Image: image\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { onEditContact, EditSearch ,isSearch } = this.props;\r\n        const { Name, Email, Phone, Status, Image, Gender } = this.state;\r\n        const contact =\r\n        {\r\n            Id: this.props.CurrentContact.Id,\r\n            Name,\r\n            Phone,\r\n            Email,\r\n            Status,\r\n            Gender,\r\n            Image\r\n        }\r\n\r\n        let tempList = this.props.ContactList.slice();\r\n        const index = tempList.findIndex(i => i.Id === contact.Id);\r\n\r\n        tempList[index] = contact;\r\n        new APIService().updateContact(contact);\r\n        onEditContact(tempList);\r\n\r\n        if (isSearch) {\r\n            tempList = this.props.SearchList.slice();\r\n    \r\n            tempList[index] = contact;\r\n            EditSearch(tempList);\r\n        }\r\n\r\n        this.setState({\r\n            isRedirect: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let isRedirect = this.state.isRedirect;\r\n        if (isRedirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        const { Name, Phone, Email, Status, Gender, Image } = this.state;\r\n        let img = \"\";\r\n        if (Image === \"\" || Image === null)\r\n            img = \"https://upload.wikimedia.org/wikipedia/commons/5/50/User_icon-cp.svg\"\r\n        else\r\n            img = `https://api.randomuser.me/portraits/${Gender}/${Image}.jpg`;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n                        <Link className=\"navbar-brand\" to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </nav>\r\n                    <div className=\"row mt-4\">\r\n                        <form className=\"col-8\" onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Name\">Name</label>\r\n                                <input type=\"text\" name=\"Name\" className=\"form-control\" placeholder=\"Enter name\" value={Name} onChange={this.onGetName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Phone\">Phone</label>\r\n                                <input type=\"tel\" name=\"Phone\" className=\"form-control\" placeholder=\"Enter phone\" value={Phone} onChange={this.onGetPhone} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Email\">Email address</label>\r\n                                <input type=\"email\" name=\"Email\" className=\"form-control\" placeholder=\"Enter email\" value={Email} onChange={this.onGetEmail} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Status\">Status</label>\r\n                                <select className=\"form-select w-100 p-2\" value={Status} onChange={this.onGetStatus}>\r\n                                    <option value=\"Friend\">Friend</option>\r\n                                    <option value=\"Work\">Work</option>\r\n                                    <option value=\"Family\">Family</option>\r\n                                    <option value=\"Private\">Private</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Gender\">Gender</label>\r\n                                <select className=\"form-select w-100 p-2\" value={Gender} onChange={this.onGetGender}>\r\n                                    <option value=\"men\">Man</option>\r\n                                    <option value=\"women\">Woman</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Image\">Image</label>\r\n                                <input type=\"number\" name=\"Image\" className=\"form-control\" min=\"0\" max=\"99\" placeholder=\"Enter number\" value={Image} onChange={this.onGetImage} />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary mt-3\">Save</button>\r\n                        </form>\r\n                        <div className=\"col-4\">\r\n                            <img src={img} className=\"rounded float-left avatar\" alt=\"...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ ListReducer }) => {\r\n    const { ContactList, CurrentContact, isSearch, SearchList } = ListReducer;\r\n    return { ContactList, CurrentContact, isSearch, SearchList };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onEditContact, EditSearch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact)","const initialState = {\r\n    ContactList: [],\r\n    SearchList: [],\r\n    InputSearch: \"\",\r\n    CurrentContact: \"\",\r\n    IsRequest: true,\r\n    isSearch: false,\r\n    isFetch: false\r\n}\r\n\r\nconst ListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LISTLOADER\": return {\r\n            ...state,\r\n            ContactList: action.payload,\r\n            IsRequest: false\r\n        }\r\n        case \"CHANGESTATUS\":\r\n            return {\r\n                ...state,\r\n                ContactList: action.tempList,\r\n            }\r\n        case \"ADDNEWCONTACT\":\r\n            return {\r\n                ...state,\r\n                ContactList: action.newContactList\r\n            }\r\n        case \"DELETE\":\r\n            return {\r\n                ...state,\r\n                ContactList: action.tempList\r\n            }\r\n        case \"SEARCH\":\r\n            return {\r\n                ...state,\r\n                SearchList: action.SearchList,\r\n                isSearch: action.isSearch,\r\n                InputSearch: action.InputSearch\r\n            }\r\n        case \"EDIT\":\r\n            return {\r\n                ...state,\r\n                CurrentContact: action.CurrentContact,\r\n            }\r\n        case \"EDITED\":\r\n            return {\r\n                ...state,\r\n                ContactList: action.EditedList,\r\n            }\r\n        case \"EDITSEARCH\":\r\n            return {\r\n                ...state,\r\n                SearchList: action.EditedList,\r\n            }\r\n        case \"DELETESEARCH\":\r\n            return {\r\n                ...state,\r\n                SearchList: action.tempList,\r\n            }\r\n        case \"CHANGEFETCH\":\r\n            return {\r\n                ...state,\r\n                isFetch: action.isFetch\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default ListReducer\r\n","const initialState = {\r\n    Name: \"\",\r\n    Phone: \"\",\r\n    Email: \"\",\r\n    Status: \"Friend\",\r\n    Gender: \"men\",\r\n    Image: \"\",\r\n    isRedirect: false,\r\n}\r\n\r\nconst AddContactReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GETNAME\":\r\n            return {\r\n                ...state,\r\n                Name: action.value\r\n            }\r\n        case \"GETPHONE\":\r\n            return {\r\n                ...state,\r\n                Phone: action.value\r\n            }\r\n        case \"GETEMAIL\":\r\n            return {\r\n                ...state,\r\n                Email: action.value\r\n            }\r\n        case \"GETSTATUS\":\r\n            return {\r\n                ...state,\r\n                Status: action.value\r\n            }\r\n        case \"GETGENDER\":\r\n            return {\r\n                ...state,\r\n                Gender: action.value\r\n            }\r\n        case \"GETIMAGE\":\r\n            return {\r\n                ...state,\r\n                Image: action.value\r\n            }\r\n        case \"SUBMIT\":\r\n            return {\r\n                ...state,\r\n                isRedirect: true,\r\n            }\r\n        case \"TODEFAULT\":\r\n            return {\r\n                Name: \"\",\r\n                Phone: \"\",\r\n                Email: \"\",\r\n                Status: \"Friend\",\r\n                Gender: \"men\",\r\n                Image: \"\",\r\n                isRedirect: false\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default AddContactReducer;","import { combineReducers } from \"redux\";\r\nimport ListReducer from \"./ListReducer\";\r\nimport AddContactReducer from \"./AddContactReducer\"\r\n\r\nexport default combineReducers({\r\n    ListReducer,\r\n    AddContactReducer\r\n})","import { createStore } from \"redux\";\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst store = createStore(RootReducer);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Import css\r\nimport \"./index.css\";\r\n\r\n// Import components\r\nimport Main from \"./Components/Main/Main\";\r\nimport NotFoundPage from \"./Components/NotFoundPage/NotFoundPage\";\r\nimport AddContact from \"./Components/AddContact/AddContact\";\r\nimport EditContact from \"./Components/EditContact/EditContact\";\r\n\r\n// Import Services\r\n// import APIService from \"./Services/APIService\";\r\n\r\n// Import store\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst App = () => {\r\n\r\n    // apiService = new APIService();\r\n\r\n    // state = {\r\n    //     // ContactList: [\r\n    //     //     {\r\n    //     //         Id: uuidv4(),\r\n    //     //         Name: \" Alexander Verdnam\",\r\n    //     //         Phone: \"+1-800-600-9898\",\r\n    //     //         Email: \"Verdnam@gmail.com\",\r\n    //     //         Status: \"Friend\",\r\n    //     //         Gender: \"men\",\r\n    //     //         Image: \"45\"\r\n    //     //     },\r\n    //     //     {\r\n    //     //         Id: uuidv4(),\r\n    //     //         Name: \"Camilla Terry\",\r\n    //     //         Phone: \"+1-800-132-7841\",\r\n    //     //         Email: \"camt@gmail.com\",\r\n    //     //         Status: \"Private\",\r\n    //     //         Gender: \"women\",\r\n    //     //         Image: \"18\"\r\n    //     //     },\r\n    //     //     {\r\n    //     //         Id: uuidv4(),\r\n    //     //         Name: \"Stafani Jamson\",\r\n    //     //         Phone: \"+1-800-225-1587\",\r\n    //     //         Email: \"stef@gmail.com\",\r\n    //     //         Status: \"Work\",\r\n    //     //         Gender: \"women\",\r\n    //     //         Image: \"39\"\r\n    //     //     }\r\n    //     // ],\r\n    //     ContactList: [],\r\n    //     SearchValue: \"\",\r\n    //     CurrentContact: \"\",\r\n    //     IsRequest: true,\r\n    // }\r\n\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log(\"componentDidUpdate\");\r\n    // }\r\n\r\n    // shouldComponentUpdate(nextState, nextProps){\r\n    //     console.log(\"Next state\", nextState);\r\n    //     console.log(\"Next props\", nextProps);\r\n    //      if (nextProps.ContactList[0].Status === \"Work\") {\r\n    //          return false;\r\n    //      }\r\n    //      else return true;\r\n    // }\r\n\r\n    // componentWillUnmount(){\r\n    //     console.log(\"componentWillUnmount\");\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     // console.log(\"componentDidMount\");\r\n    //     this.apiService.fetchContactList(this.state.IsRequest).then(currentListData => {\r\n    //         this.setState({\r\n    //             ContactList: currentListData[0].List,\r\n    //             IsRequest: currentListData[1]\r\n    //         });\r\n    //     })\r\n    // }\r\n\r\n    // async fetchContactList() {\r\n    //     const List = await fetch(this.URL)\r\n    //         .then(responce => {\r\n    //             return responce.json();\r\n    //         }).then(data => {\r\n    //             if (data == null) {\r\n    //                 return {\r\n    //                     List: []\r\n    //                 }\r\n\r\n    //             } else {\r\n    //                 return {\r\n    //                     List: data\r\n    //                 }\r\n    //             }\r\n    //         })\r\n    //         .catch(err => console.log(err))\r\n    //     return List;\r\n    // }\r\n\r\n    // updateDatabse = (List) => {\r\n    //     fetch(this.URL,\r\n    //         {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             },\r\n    //             method: \"PUT\",\r\n    //             body: JSON.stringify(List)\r\n    //         })\r\n    //         // .then(res => console.log(res))\r\n    //         // .catch(res => console.log(res))\r\n    // }\r\n\r\n    // Start\r\n\r\n\r\n    // End\r\n\r\n    // render() {\r\n    //     let { SearchValue, ContactList, CurrentContact, IsRequest } = this.state;\r\n    //     if (SearchValue !== \"\") {\r\n    //         const tempList = [];\r\n\r\n    //         ContactList.forEach(element => {\r\n    //             const name = element.Name.toLowerCase();\r\n    //             if (name.includes(SearchValue))\r\n    //                 tempList.push(element);\r\n    //         });\r\n    //         ContactList = tempList;\r\n    //     }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Provider store={store}>\r\n                    <Route path=\"/\" exact render={() => (<Main />)} />\r\n                    <Route path=\"/add-new-contact\" exact render={() => (<AddContact />)} />\r\n                    <Route path=\"/edit-contact\" exact render={() => (<EditContact />)} />\r\n                </Provider>\r\n                <Route component={NotFoundPage} />\r\n            </Switch>\r\n        </Router >\r\n\r\n    )\r\n    // }\r\n}\r\n\r\n// Main: List={ContactList} onChangeStatus={this.onChangeStatus} onClickDelete={this.onClickDelete} onClickEdit={this.onClickEdit} onChangeSearch={this.onChangeSearch} IsRequest={IsRequest}\r\n// AddContact: onAddNewContact={this.onAddNewContact} \r\n// EditContact:  onEditContact={this.onEditContact} CurrentContact={CurrentContact} \r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}